// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  game

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( Area ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Area ) UnmarshalJSON([]byte) error { return nil }
func ( Area ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Area ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Area *Area

func ( Game ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Game ) UnmarshalJSON([]byte) error { return nil }
func ( Game ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Game ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Game *Game

func ( IncommingCommand ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* IncommingCommand ) UnmarshalJSON([]byte) error { return nil }
func ( IncommingCommand ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* IncommingCommand ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_IncommingCommand *IncommingCommand

func ( IncommingMessage ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* IncommingMessage ) UnmarshalJSON([]byte) error { return nil }
func ( IncommingMessage ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* IncommingMessage ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_IncommingMessage *IncommingMessage

func ( Message ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Message ) UnmarshalJSON([]byte) error { return nil }
func ( Message ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Message ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Message *Message

func ( Mob ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Mob ) UnmarshalJSON([]byte) error { return nil }
func ( Mob ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Mob ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Mob *Mob

func ( Player ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Player ) UnmarshalJSON([]byte) error { return nil }
func ( Player ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Player ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Player *Player

func ( PlayerState ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* PlayerState ) UnmarshalJSON([]byte) error { return nil }
func ( PlayerState ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* PlayerState ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_PlayerState *PlayerState

func ( Position ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Position ) UnmarshalJSON([]byte) error { return nil }
func ( Position ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Position ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Position *Position

func ( PrivateMessage ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* PrivateMessage ) UnmarshalJSON([]byte) error { return nil }
func ( PrivateMessage ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* PrivateMessage ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_PrivateMessage *PrivateMessage

func ( Room ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Room ) UnmarshalJSON([]byte) error { return nil }
func ( Room ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Room ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Room *Room

func ( Target ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Target ) UnmarshalJSON([]byte) error { return nil }
func ( Target ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Target ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Target *Target
